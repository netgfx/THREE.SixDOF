{"version":3,"file":"three-6dof.amd.js","sources":["../src/components/uniforms.ts","../src/components/constants.ts","../src/components/viewer.ts"],"sourcesContent":["export const Uniforms: object = {\n  colorTexture: {\n    type: 't',\n    value: null,\n  },\n  depthTexture: {\n    type: 't',\n    value: null,\n  },\n  time: {\n    type: 'f',\n    value: 0.0,\n  },\n  opacity: {\n    type: 'f',\n    value: 1.0,\n  },\n  pointSize: {\n    type: 'f',\n    value: 3.0,\n  },\n  debugDepth: {\n    type: 'f',\n    value: 0.0,\n  },\n  displacement: {\n    type: 'f',\n    value: 1.0,\n  },\n}\n","enum MeshDensity {\n  LOW = 64,\n  MEDIUM = 128,\n  HIGH = 256,\n  EXTRA_HIGH = 512,\n  EPIC = 1024,\n}\n\nenum Style {\n  WIRE = 0,\n  POINTS = 1,\n  MESH = 2,\n}\n\nenum TextureType {\n  TOP_BOTTOM,\n  SEPERATE,\n}\n\nclass Props {\n  public type: TextureType = TextureType.SEPERATE\n  public density: MeshDensity = MeshDensity.HIGH\n  public style: Style = Style.MESH\n  public displacement: number = 4.0\n  public radius: number = 6\n}\n\nexport { MeshDensity, Style, TextureType, Props }\n","import {\n  Object3D,\n  ShaderMaterial,\n  BackSide,\n  Mesh,\n  Points,\n  SphereBufferGeometry,\n  Texture,\n  NearestFilter,\n  LinearFilter,\n  RGBAFormat,\n  SRGBColorSpace,\n} from './three'\n\n// @ts-ignore\nimport frag from '../shaders/sixdof.frag'\n// @ts-ignore\nimport vert from '../shaders/sixdof.vert'\n\nimport { Uniforms } from './uniforms'\nimport { Style, MeshDensity, TextureType, Props } from './constants'\n\nexport default class Viewer extends Object3D {\n  /** Default props if not provided */\n  private props: Props = new Props()\n\n  private static geometry: SphereBufferGeometry\n  private material: ShaderMaterial = new ShaderMaterial({\n    uniforms: Uniforms,\n    vertexShader: vert,\n    fragmentShader: frag,\n    transparent: true,\n    side: BackSide,\n  })\n\n  constructor(texture: Texture, depth?: Texture, props?: object) {\n    super()\n\n    /** Assign the user provided props, if any */\n    this.setProps(this.props, props)\n\n    // /** Add the compiler definitions needed to pick the right GLSL methods */\n    this.setShaderDefines(this.material, [TextureType[this.props.type]])\n\n    /**\n     * Create the geometry only once, it can be shared between instances\n     *  of the viewer since it's kept as a static class member\n     **/\n    if (!Viewer.geometry) {\n      Viewer.geometry = this.createSphereGeometry(\n        this.props.radius,\n        this.props.density,\n      )\n    }\n\n    /** Assign the textures and update the shader uniforms */\n    this.assignTexture(this.props.type, texture, depth)\n\n    /** Set the displacement using the public setter */\n    this.displacement = this.props.displacement\n\n    /** Create the Mesh/Points and add it to the viewer object */\n    super.add(this.createMesh(Viewer.geometry, this.material, this.props.style))\n  }\n\n  /** Small util to set the defines of the GLSL program based on textureType */\n  private setShaderDefines(\n    material: ShaderMaterial,\n    defines: Array<string>,\n  ): void {\n    defines.forEach(define => (material.defines[define] = ''))\n  }\n\n  /** Internal util to create buffer geometry */\n  private createSphereGeometry(\n    radius: number,\n    meshDensity: MeshDensity,\n  ): SphereBufferGeometry {\n    return new SphereBufferGeometry(radius, meshDensity, meshDensity)\n  }\n\n  /** Internal util to set viewer props from config object */\n  private setProps(viewerProps: Props, userProps?: object): void {\n    if (!userProps) return\n\n    /** Iterate over user provided props and assign to viewer props */\n    for (let prop in userProps) {\n      if (viewerProps[prop]) {\n        viewerProps[prop] = userProps[prop]\n      } else {\n        console.warn(\n          `THREE.SixDOF: Provided ${prop} in config but it is not a valid property and being ignored`,\n        )\n      }\n    }\n  }\n\n  /** Internal util to assign the textures to the shader uniforms */\n  private assignTexture(\n    type: TextureType,\n    colorTexture: Texture,\n    depthTexture?: Texture,\n  ): void {\n    /** Check wheter we are rendering top bottom or just single textures */\n    if (type === TextureType.SEPERATE) {\n      if (!depthTexture)\n        throw new Error(\n          'When using seperate texture type, depthmap must be provided',\n        )\n      this.depth = this.setDefaultTextureProps(depthTexture)\n    }\n\n    /** Assign the main texture */\n    this.texture = this.setDefaultTextureProps(colorTexture)\n  }\n\n  private setDefaultTextureProps(texture: Texture): Texture {\n    texture.minFilter = NearestFilter\n    texture.magFilter = LinearFilter\n    texture.format = RGBAFormat\n    texture.colorSpace = SRGBColorSpace\n    texture.generateMipmaps = false\n    return texture\n  }\n\n  /** An internal util to create the Mesh Object3D */\n  private createMesh(\n    geo: SphereBufferGeometry,\n    mat: ShaderMaterial,\n    style: Style,\n  ): Object3D {\n    switch (style) {\n      case Style.WIRE:\n        if (!this.material.wireframe) this.material.wireframe = true\n        return new Mesh(geo, mat)\n      case Style.MESH:\n        if (this.material.wireframe) this.material.wireframe = false\n        return new Mesh(geo, mat)\n      case Style.POINTS:\n        return new Points(geo, mat)\n    }\n  }\n\n  /** Toggle vieweing texture or depthmap in viewer */\n  public toggleDepthDebug(state?: boolean): void {\n    this.material.uniforms.debugDepth.value =\n      state != undefined ? state : !this.material.uniforms.debugDepth.value\n  }\n\n  /** Setter for displacement amount */\n  public set displacement(val: number) {\n    this.material.uniforms.displacement.value = val\n  }\n\n  /** Setter for depthmap uniform */\n  public set depth(map: Texture) {\n    this.material.uniforms.depthTexture.value = map\n  }\n\n  /** Setter for depthmap uniform */\n  public set texture(map: Texture) {\n    this.material.uniforms.colorTexture.value = map\n  }\n\n  /** Setter for the opacity */\n  public set opacity(val: number) {\n    this.material.uniforms.opacity.value = val\n  }\n\n  /** Setter for the point size */\n  public set pointSize(val: number) {\n    this.material.uniforms.pointSize.value = val\n  }\n\n  /** Getter for the current viewer props */\n  public get config(): Props {\n    return this.props\n  }\n\n  /** Getter for the opacity */\n  public get opacity(): number {\n    return this.material.uniforms.opacity.value\n  }\n\n  /** Getter for the point size */\n  public get pointSize(): number {\n    return this.material.uniforms.pointSize.value\n  }\n\n  /** Getter for displacement amount */\n  public get displacement(): number {\n    return this.material.uniforms.displacement.value\n  }\n\n  /** Getter for texture */\n  public get texture(): Texture {\n    return this.material.uniforms.colorTexture.value\n  }\n\n  /** Getter for the depth texture */\n  public get depth(): Texture {\n    return this.material.uniforms.opacity.value\n  }\n}\n"],"names":["Uniforms","colorTexture","type","value","depthTexture","time","opacity","pointSize","debugDepth","displacement","MeshDensity","Style","TextureType","Props","constructor","SEPERATE","density","HIGH","style","MESH","radius","Viewer","Object3D","texture","depth","props","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","transparent","side","BackSide","setProps","setShaderDefines","geometry","createSphereGeometry","assignTexture","add","createMesh","defines","forEach","define","meshDensity","SphereBufferGeometry","viewerProps","userProps","prop","console","warn","concat","Error","setDefaultTextureProps","minFilter","NearestFilter","magFilter","LinearFilter","format","RGBAFormat","colorSpace","SRGBColorSpace","generateMipmaps","geo","mat","WIRE","wireframe","Mesh","POINTS","Points","toggleDepthDebug","state","undefined","val","map","config"],"mappings":"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"}